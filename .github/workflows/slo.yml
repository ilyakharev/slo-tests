name: Full SLO test workflow

on:
  pull_request:
    branches: ["main", "slo"]

concurrency: slo

jobs:
  check-results:
    uses: ./.github/workflows/check-prometheus.yml
    secrets:
      KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
    with:
      test_start: 1673978239967
      test_end: 1673978442723

  # create-cluster:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #       with:
  #         ref: ${{ github.ref }}
  #     - name: create-cluster
  #       uses: ./.github/actions/cluster
  #       with:
  #         KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
  #         command: apply

  # build-nodejs:
  #   uses: ./.github/workflows/build-workload.yml
  #   secrets:
  #     KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
  #     DOCKER_REPO: ${{ secrets.DOCKER_REPO }}
  #     DOCKER_FOLDER: ${{ secrets.DOCKER_FOLDER }}
  #     DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  #     DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  #   with:
  #     language: nodejs

  # create-tables:
  #   needs: [create-cluster, build-nodejs]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - run: mkdir $HOME/.kube; echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > $HOME/.kube/config

  #     - name: Run workload
  #       uses: ./.github/actions/workload
  #       with:
  #         language: "nodejs"
  #         command: "create"
  #         timeout: "20s"

  # run-nodejs:
  #   needs: [create-cluster, create-tables, build-nodejs]
  #   uses: ./.github/workflows/run-slo.yml
  #   secrets: inherit
  #   with:
  #     language: nodejs

  # cleanup-tables:
  #   needs: [run-nodejs]
  #   if: always()
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - run: mkdir $HOME/.kube; echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > $HOME/.kube/config

  #     - name: Run workload
  #       uses: ./.github/actions/workload
  #       with:
  #         language: "nodejs"
  #         command: "cleanup"
  #         timeout: "20s"

  # grafana-screenshot:
  #   needs: [run-nodejs]
  #   if: always()
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #       with:
  #         ref: ${{ github.ref }}

  #     - run: mkdir $HOME/.kube; echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > $HOME/.kube/config

  #     - name: Create screenshot
  #       uses: ./.github/actions/grafana-screenshot
  #       id: screenshot
  #       with:
  #         time: "5m"
  #         AWS_CREDENTIALS: ${{ secrets.AWS_CREDENTIALS }}
  #         AWS_CONFIG: ${{ secrets.AWS_CONFIG }}
  #         s3-endpoint: ${{ secrets.S3_ENDPOINT }}
  #         s3-bucket: ${{ secrets.S3_BUCKET }}
  #         image-folder: "ydb-slo-results/"
  #         image-prefix: "nodejs"

  #     - name: Log image URL
  #       run: echo "${{ steps.screenshot.outputs.picture-url}}"

  #     - name: Add comment to PR
  #       uses: thollander/actions-comment-pull-request@v2
  #       with:
  #         message: |
  #           Here are results of SLO test :volcano: :

  #           [Grafana Dashboard](${{ vars.INGRESS_ADDRESS }})
  #           ![SLO-nodejs](${{ steps.screenshot.outputs.picture-url}})

  # # delete-cluster:
  # #   needs: [grafana-screenshot]
  # #   runs-on: ubuntu-latest
  # #   steps:
  # #     - name: Checkout
  # #       uses: actions/checkout@v3
  # #       with:
  # #         ref: ${{ github.ref }}
  # #     - name: create-cluster
  # #       uses: ./.github/actions/cluster
  # #       with:
  # #         KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
  # #         command: delete
