name: "Change cluster"
description: "Create or delete YDB cluster in kubernetes"
author: "Ilya Shevchenko <id.shev@yandex.ru>"

inputs:
  KUBE_CONFIG:
    description: "base64 kube config"
    required: true
  command:
    description: "Workload command"
    required: true
  subfolder:
    description: "Subfolder to clone repo into"
    required: true

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
      with:
        repository: "ydb-platform/slo-tests"
        path: "${{ inputs.subfolder }}"

    - run: mkdir $HOME/.kube; echo "${{ inputs.KUBE_CONFIG }}" | base64 -d > $HOME/.kube/config
      shell: bash

    - name: Get existing pods and PVC
      run: kubectl get pods; kubectl get pvc
      shell: bash

    - name: Create storage nodes
      if: inputs.command == 'apply'
      run: kubectl apply -f ${{ inputs.subfolder }}/k8s/ci/storage.yaml
      shell: bash

    - if: inputs.command == 'apply'
      name: Wait until storage nodes become ready
      run: kubectl wait --timeout 5m --for=jsonpath="{.status.state}"="Ready" storages.ydb.tech storage-sample
      shell: bash

    - name: Create database nodes
      if: inputs.command == 'apply'
      run: kubectl apply -f ${{ inputs.subfolder }}/k8s/ci/database.yaml
      shell: bash

    - if: inputs.command == 'apply'
      name: Wait until database nodes become ready
      run: kubectl wait --timeout 5m --for=jsonpath="{.status.state}"="Ready" database.ydb.tech database-sample
      shell: bash

    - name: Delete database nodes
      if: inputs.command == 'delete'
      run: kubectl apply -f ${{ inputs.subfolder }}/k8s/ci/database.yaml
      shell: bash

    - name: Delete storage nodes
      if: inputs.command == 'delete'
      run: kubectl apply -f ${{ inputs.subfolder }}/k8s/ci/storage.yaml
      shell: bash

    - name: Delete PVC
      if: inputs.command == 'delete'
      run: kubectl delete pvc `kubectl get pvc -o=jsonpath="{.items[*].metadata.name}" -l ydb-cluster=slo-storage`
      shell: bash

    - name: Get pods and PVC
      run: kubectl get pods; kubectl get pvc
      shell: bash
