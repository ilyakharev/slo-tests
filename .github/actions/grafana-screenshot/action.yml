name: "Take screenshot in grafana"
description: "Take grafana screenshot from inside of k8s cluster and save it into comment to pull request"
author: "Ilya Shevchenko <id.shev@yandex.ru>"
inputs:
  dashboard:
    description: "Dashboard UID"
    default: "7CzMl5t4k"
  width:
    description: "Image width"
    default: "1500"
  height:
    description: "Image height"
    default: "1100"
  time_from:
    description: "Capture graph from this time"
    required: true
  time_to:
    description: "Capture graph to this time"
    required: true
  grafana-host:
    description: "Grafana host"
    default: "http://grafana"
  AWS_CREDENTIALS:
    description: "AWS credentials ($HOME/.aws/credentials) in base64"
    required: true
  AWS_CONFIG:
    description: "AWS config ($HOME/.aws/config) in base64"
    required: true
  s3-endpoint:
    description: "AWS s3 --endpoint-url param"
    required: true
  image-folder:
    description: "AWS s3 folder"
    default: "ydb-slo-results/"
  image-prefix:
    description: "Image filename prefix, e.g. '<image-prefix>-`date -Iseconds`.png;'"
    required: true

outputs:
  picture-url:
    description: "Uploaded picture url"
    value: ${{ steps.upload.outputs.url }}

runs:
  using: "composite"
  steps:
    - name: Configure AWS Credentials
      shell: bash
      run: |
        mkdir $HOME/.aws
        echo "${{ inputs.AWS_CREDENTIALS }}" | base64 -d > $HOME/.aws/credentials
        echo "${{ inputs.AWS_CONFIG }}" | base64 -d > $HOME/.aws/config

    - name: Get dashboard picture from grafana
      shell: bash
      run: >
        kubectl run -q -i --image=busybox --rm grafana-screenshoter --restart=Never -- sh -c "
        wget -q -O- '${{ inputs.grafana-host }}/render/d/${{ inputs.dashboard }}/slo?orgId=1&from=${{ inputs.time_from }}&to=${{ inputs.time_to }}&width=${{ inputs.width }}&height=${{ inputs.height }}&tz=Europe%2FIstanbul&kiosk=tv' 
        | base64" > pic.b64;

    - name: Create picture from base64
      shell: bash
      run: cat pic.b64 | base64 --decode > pic.png

    - name: Upload image to the bucket
      id: upload
      shell: bash
      run: |
        export PICTURE_NAME=${{ inputs.image-prefix }}-`date -Iseconds`.png;
        aws s3 --endpoint-url=${{ inputs.s3-endpoint }} cp ./pic.png "s3://${{ inputs.image-folder }}${PICTURE_NAME}";
        echo "url=${{ inputs.s3-endpoint }}/${{ inputs.image-folder }}${PICTURE_NAME}" >> $GITHUB_OUTPUT
